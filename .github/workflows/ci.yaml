on: [push]

name: ci

jobs:
  check:
    name: Foundry project
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive
      - uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: Install Foundry
        uses: foundry-rs/foundry-toolchain@v1
        with:
          version: nightly

      - name: Install contract dependencies and hh test deps
        run: npm install
      - name: Run forge tests
        run: forge test -vvv

      - name: Run hardhat tests
        run: npx hardhat test
      - name: publish npm package
        env:
          POLYSENSUS_APP_ID: ${{ secrets.POLYSENSUS_APP_ID }}
          POLYSENSUS_APP_PEM: ${{ secrets.POLYSENSUS_APP_PEM }}
        run: |
          [ -z "$POLYSENSUS_APP_PEM" ] && echo "POLYSENSUS_APP_PEM not set" && exit 1
          [ -z "$POLYSENSUS_APP_ID" ] && echo "POLYSENSUS_APP_ID not set" && exit 1

          # Get the token
          echo -n $POLYSENSUS_APP_PEM | base64 -d > polysensus.app.pem
          mkdir -p venvs/cicd
          python3 -m venv venv/cicd
          source venv/cicd/bin/activate
          pip3 install -r cicd/requirements.txt
          export TOKEN=$(cat <<PYEND | python3
          import os, time, base64
          import jwt
          from cryptography.hazmat.backends import default_backend

          now = int(time.time())#
          app_id = os.environ["POLYSENSUS_APP_ID"]
          payload = {
            "iat": now,
            "exp": now + (60),
            "iss": app_id
          }
          pem = base64.b64decode(os.environ["POLYSENSUS_APP_PEM"])
          key = default_backend().load_pem_private_key(pem, None)
          print(jwt.encode(payload, key, algorithm='RS256'))
          PYEND
          )

          INSTALLATION_ID=$(curl -s -X GET \
            -H "Authorization: Bearer $TOKEN" \
            -H "Accept: application/vnd.github.v3+json" \
            https://api.github.com/app/installations | jq -r .[0].id)

          JSON=$(curl -s -X POST \
            -H "Authorization: Bearer $TOKEN" \
            -H "Accept: application/vnd.github.v3+json" \
            https://api.github.com/app/installations/$INSTALLATION_ID/access_tokens)

          echo -n $JSON | jq -r '.permissions'
          export NPM_TOKEN=$(echo -n $JSON | jq -r '.token')
          echo "//npm.pkg.github.com/:_authToken=$NPM_TOKEN" > ~/.npmrc
          npm publish

