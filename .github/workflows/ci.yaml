on: [push]

name: ci

jobs:
  test:
    name: Foundry project
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive
          path: chaintrap-contracts
      - uses: actions/setup-node@v3
        with:
          node-version: 16
      - name: Checkout the diamond-deploy repository
        uses: actions/checkout@v3
        with:
          repository: polysensus/diamond-deploy
          submodules: recursive
          path: diamond-deploy
      - name: Install Foundry
        uses: foundry-rs/foundry-toolchain@v1
        with:
          version: nightly

      - name: Install go-tusk and go-task
        run: |
          mkdir -p $GITHUB_WORKSPACE/bin

          # go-task
          sh -c "$(curl --location https://taskfile.dev/install.sh)" -- \
            -d -b $GITHUB_WORKSPACE/bin
          echo $GITHUB_WORKSPACE/bin >> $GITHUB_PATH

      - name: Install local diamond-deploy
        working-directory: diamond-deploy
        run: npm install

      - name: Install contract dependencies and hh test deps
        working-directory: chaintrap-contracts
        run: |
          npm uninstall --save "@polysensus/diamond-deploy"
          npm install ../diamond-deploy --save-dev
          npm install

      - name: build 
        working-directory: chaintrap-contracts
        run: task build

      - name: Run forge tests
        working-directory: chaintrap-contracts
        run: task test:forge

      - name: Run hardhat tests
        working-directory: chaintrap-contracts
        run: task test:hh

  publish:
    name: Publish
    needs: test
    runs-on: ubuntu-latest
    if: ${{ startsWith(github.event.head_commit.message, 'release:v') ||
              startsWith(github.event.head_commit.message, 're-release:') ||
              startsWith(github.event.head_commit.message, 'fix:') }}

    #if: |
    #  github.event_name == 'push'
    #  && ( github.ref == 'refs/heads/master' || github.ref == 'refs/heads/main' )
    #  && contains(github.event.head_commit.message, 'release: v')
    steps:
    - uses: actions/checkout@v2
    - name: Cache node_modules
      id: cache-modules
      uses: actions/cache@v1
      with:
        path: node_modules
        key: 16.x-${{ runner.OS }}-build-${{ hashFiles('package.json') }}
    - name: Build npm package
      if: steps.cache-modules.outputs.cache-hit != 'true'
      run: npm install

    - name: publish npm package
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        echo "//npm.pkg.github.com/:_authToken=$GITHUB_TOKEN" > ~/.npmrc

        # github has scale issues when there are a large (> 20 ) npm packages in
        # a repo, so force for fixes seems like the right thing for now.
        FORCE=""
        if [[ ! $(git log -1 --pretty=%B) =~ '^release:v' ]]; then
          export FORCE=--force
        fi
        npm publish $FORCE